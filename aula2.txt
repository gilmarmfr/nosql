//Exercício 1

use alunos
showdb alunos
db.alunos.insert({})
show collections

db.alunos.insert({
    "nome" : "Pedro",
    "sexo" : "M",
    "data" : new Date(1992, 2, 13),
    "uf"   : "ES",
    "instituicao" : "PUC-MINAS",
    "curso": "Ciencias de Dados e Big Data",
    "notas" : {
        "IBD" : 9,
        "NSQ" : 10,
        "ILE" : 7,
        "AQD" : 8,
    },
});

db.alunos.insert({
    "nome" : "Amanda",
    "sexo" : "F",
    "data" : new Date(1994, 6, 15),
    "uf"   : "MG",
    "instituicao" : "PUC-MINAS",
    "curso": "Ciencias de Dados e Big Data",
    "notas" : {
        "IBD" : 9,
        "NSQ" : 8,
        "ILE" : 7,
        "AQD" : 10,
    },
});

db.alunos.insert({
    "nome" : "Robert",
    "sexo" : "M",
    "data" : new Date(1902, 1, 29),
    "uf"   : "MG",
    "instituicao" : "PUC-MINAS",
    "curso": "Ciencias de Dados e Big Data",
    "notas" : {
        "IBD" : 9,
        "NSQ" : 10,
        "ILE" : 8,
        "AQD" : 7,
    },
});

db.alunos.find({},10,1).sort({"data" : 1}).pretty()

db.alunos.update({"nome" : "Robert"}, {$set : {"notas.NSQ" : 5}})
db.alunos.findOne({"nome" : "Robert"})

db.alunos.remove({"nome" : "Robert"})
db.alunos.find({}).pretty()

//Exercício 2

var map = function(){
    emit(this.text.substring(this.text.length-2,this.text.length),1);
}

var reduce = function(key, values){
    return Array.sum(values);
}

db.Vocabulary.mapReduce(map,reduce,{query:
{
        text:  /((ar)|(er)|(ir))$/
}
 , out:"resultado"})


db.resultado.find()

